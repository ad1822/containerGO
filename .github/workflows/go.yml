# CI configuration for Go project

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  # Build job – compiles and tests Go code across versions
  build:
    # GitHub-hosted Ubuntu environment where steps will run
    runs-on: ubuntu-latest

    # Run the job for each Go version specified
    strategy:
      matrix:
        go-version: [1.23, 1.24]

    steps:
      # Clone the repository into the runner's workspace
      - name: Checkout Code
        uses: actions/checkout@v4

      # Install and configure specified Go version
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      # Download and tidy Go module dependencies
      - name: Installing Dependencies
        run: go mod tidy

      # Format and simplify Go code
      - name: Format Code
        run: gofmt -s -w .

      # Install required C system libraries
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgpgme-dev \
            libbtrfs-dev \
            libdevmapper-dev \
            pkg-config \
            libglib2.0-dev \
            libseccomp-dev \
            gcc

      # Compile Go application
      - name: Build Code
        run: go build -v -o congo main.go

  # Docker push job – authenticates and pushes image
  push-docker-image:
    runs-on: ubuntu-latest

    steps:
      # Log in to Docker Hub using repository secrets
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
